# CMake build script for the libnavigate
#
# Building:
# $ mkdir build && cd build
# $ cmake [-G "Generator"] [-DSETTINGS=VALUE] ..
# $ cmake --build .
#
# Installation:
# # cmake --build . --target install

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(navigate)

# Prepare libnavigate version fields
FILE(STRINGS "src/version" LIBNAVIGATE_VERSION_IN)

STRING(REGEX MATCHALL "[0-9]+" LIBNAVIGATE_VERSION_LIST "${LIBNAVIGATE_VERSION_IN}")

LIST(GET LIBNAVIGATE_VERSION_LIST 0 LIBNAVIGATE_VERSION_MAJOR)
LIST(GET LIBNAVIGATE_VERSION_LIST 1 LIBNAVIGATE_VERSION_MINOR)
LIST(GET LIBNAVIGATE_VERSION_LIST 2 LIBNAVIGATE_VERSION_PATCH)
SET(LIBNAVIGATE_VERSION_STRING "${LIBNAVIGATE_VERSION_IN}")

#FILE(READ "src/version.h.in" LIBNAVIGATE_VERSION_FILE)
#STRING(REGEX REPLACE "\\@LIBNAVIGATE_VERSION_STRING\\@" "\"${LIBNAVIGATE_VERSION_STRING}\""
#		LIBNAVIGATE_VERSION_FILE ${LIBNAVIGATE_VERSION_FILE})
#STRING(REGEX REPLACE "\\@LIBNAVIGATE_VERSION_MAJOR\\@" "${LIBNAVIGATE_VERSION_MAJOR}"
#		LIBNAVIGATE_VERSION_FILE ${LIBNAVIGATE_VERSION_FILE})
#STRING(REGEX REPLACE "\\@LIBNAVIGATE_VERSION_MINOR\\@" "${LIBNAVIGATE_VERSION_MINOR}"
#		LIBNAVIGATE_VERSION_FILE ${LIBNAVIGATE_VERSION_FILE})
#STRING(REGEX REPLACE "\\@LIBNAVIGATE_VERSION_PATCH\\@" "${LIBNAVIGATE_VERSION_PATCH}"
#		LIBNAVIGATE_VERSION_FILE ${LIBNAVIGATE_VERSION_FILE})
#FILE(WRITE "src/version.h" ${LIBNAVIGATE_VERSION_FILE})

CONFIGURE_FILE("${CMAKE_CURRENT_SOURCE_DIR}/src/version.h.in" "${CMAKE_CURRENT_SOURCE_DIR}/src/version.h")

# Find required dependencies
INCLUDE_DIRECTORIES(include)

IF(BUILD_CPPBINDINGS)
	INCLUDE_DIRECTORIES(c++-bindings/include)
ENDIF()

IF(MSVC)
	ADD_DEFINITIONS(-D_WIN32_WINNT=0x0500 -DWINVER=0x0500 -D_CRT_SECURE_NO_WARNINGS)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /W4")
ELSE()
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
ENDIF()

IF(CMAKE_SYSTEM_NAME MATCHES "Windows")
	IF(MSVC)
		FILE(GLOB SRC src/*.c src/win32/*.c src/win32/navigate.rc)
	ELSEIF(MINGW)
		FILE(GLOB SRC src/*.c)
	ELSE()
		FILE(GLOB SRC src/*.c src/win32/*.c)
	ENDIF()
ELSEIF(CMAKE_SYSTEM_NAME MATCHES "Linux")
	FILE(GLOB SRC src/*.c)
ENDIF()

IF(BUILD_CPPBINDINGS)
	FILE(GLOB SRC_CPPBINDINGS c++-bindings/*.cpp)
ENDIF()

# Check if some parts of the library are not required
IF(NO_GENERATOR)
	ADD_DEFINITIONS(-DNO_GENERATOR)
ENDIF()
IF(NO_PARSER)
	ADD_DEFINITIONS(-DNO_PARSER)
ENDIF()

ADD_LIBRARY(navigate SHARED ${SRC} ${SRC_CPPBINDINGS})

IF(UNIX)
	TARGET_LINK_LIBRARIES(navigate m)
ENDIF()

SET_TARGET_PROPERTIES(navigate PROPERTIES
	VERSION ${LIBNAVIGATE_VERSION_MAJOR}.${LIBNAVIGATE_VERSION_MINOR}.${LIBNAVIGATE_VERSION_PATCH}
	SOVERSION ${LIBNAVIGATE_VERSION_MAJOR})

IF(UNIX)
	CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/libnavigate.pc.cmake
		${CMAKE_CURRENT_BINARY_DIR}/libnavigate.pc @ONLY)
ENDIF()

# Install targets
INSTALL(TARGETS navigate
	RUNTIME DESTINATION bin
	LIBRARY DESTINATION lib${LIB_SUFFIX}
	ARCHIVE DESTINATION lib${LIB_SUFFIX})
IF(UNIX)
	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/libnavigate.pc
		DESTINATION /usr/lib/pkgconfig)
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/AUTHORS
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/ChangeLog
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/COPYING
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/lgpl-3.0.txt
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/NEWS
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/README
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/THANKS
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
	INSTALL(FILES ${CMAKE_CURRENT_SOURCE_DIR}/TODO
		DESTINATION ${CMAKE_INSTALL_PREFIX}/share/doc/navigate-${LIBNAVIGATE_VERSION_STRING})
ENDIF()
INSTALL(DIRECTORY include/libnavigate DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
INSTALL(FILES include/navigate.h DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
IF(BUILD_CPPBINDINGS)
	INSTALL(DIRECTORY c++-bindings/include/libnavigate/c++ DESTINATION ${CMAKE_INSTALL_PREFIX}/include/libnavigate)
	INSTALL(FILES c++-bindings/include/navigate++ DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
ENDIF()

IF(BUILD_TESTS)
	ADD_EXECUTABLE(test tests/main.c)
	TARGET_LINK_LIBRARIES(test navigate)

	ADD_EXECUTABLE(check_alm tests/check_alm.c)
	TARGET_LINK_LIBRARIES(check_alm navigate)

	ADD_EXECUTABLE(check_mla tests/check_mla.c)
	TARGET_LINK_LIBRARIES(check_mla navigate)

	IF(UNIX)
		TARGET_LINK_LIBRARIES(test m)
		TARGET_LINK_LIBRARIES(check_alm m)
		TARGET_LINK_LIBRARIES(check_mla m)
	ENDIF ()

	IF(BUILD_CPPBINDINGS)
		ADD_EXECUTABLE(test++ tests/main.cpp)
		TARGET_LINK_LIBRARIES(test++ navigate)
		IF(UNIX)
			TARGET_LINK_LIBRARIES(test++ m)
		ENDIF ()
	ENDIF()

ENDIF()

IF(BUILD_INSTALLPACKAGE MATCHES "RPM")
	INCLUDE(InstallRequiredSystemLibraries)

	SET(CPACK_GENERATOR "RPM")
	SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/README")
	SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "The IEC 61162-1/NMEA 0183 messages generating/parsing library")
	SET(CPACK_PACKAGE_VENDOR "Russian Institute of Radionavigation and Time")
	SET(CPACK_PACKAGE_VERSION_MAJOR "${LIBNAVIGATE_VERSION_MAJOR}")
	SET(CPACK_PACKAGE_VERSION_MINOR "${LIBNAVIGATE_VERSION_MINOR}")
	SET(CPACK_PACKAGE_VERSION_PATCH "${LIBNAVIGATE_VERSION_PATCH}")
	SET(CPACK_RPM_PACKAGE_LICENSE "LGPLv3")
	SET(CPACK_RPM_PACKAGE_GROUP "Development/Libraries")

	INCLUDE(CPack)
ENDIF()
